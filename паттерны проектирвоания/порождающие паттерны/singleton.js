// Синглтон, или одиночка, (англ. singleton) — это шаблон, который позволяет создать лишь один объект, а при попытке создать новый возвращает уже созданный.

//! Синглтон может нарушать принцип открытости и закрытости, увеличивая зацепление объектов. Из-за этого иногда его считают антипаттерном.

// Пример Секция статьи "Пример"
// Допустим, мы пишем приложение для описания Солнечной системы. Солнце у нас может быть только одно, поэтому создать его тоже можно лишь один раз.

// Если по каким-то причинам в приложении есть код, пытающийся создать Солнце заново, то стоит использовать уже существующий объект, а не создавать ещё один.

class Sun {
    // Держим ссылку на созданный объект:
    static instance = null;
  
    // Делаем конструктор приватным:
    #constructor() {}
  
    static get instance() {
      // Если объект был создан ранее, возвращаем его:
      if (this.instance) return this.instance;
  
      // Иначе создаём новый экземпляр:
      this.instance = new this();
      return this.instance;
    }
  }
  
//   Использовать такой синглтон мы тогда будем так:

// При первом вызове создастся новый объект:
const sun = Sun.instance;

// В дальнейшем instance будет возвращать
// ранее созданный объект:
const sun1 = Sun.instance;
const sun2 = Sun.instance;
