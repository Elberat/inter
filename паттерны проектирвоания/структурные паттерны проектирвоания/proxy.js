// Прокси Секция статьи "Прокси"
// Прокси (англ. proxy) — это промежуточный модуль, предоставляет интерфейс к какому-либо другому модулю.

// Он похож на декоратор, но в отличие от него не меняет поведение оригинального объекта в рантайме. Вместо этого он «вмешивается» в общение с оригинальным объектом.

// Пример Секция статьи "Пример"
// В JavaScript есть встроенный механизм работы с прокси — Proxy. Мы можем подменить свойство или метод объекта «на лету»:

const original = {
    name: 'Alice',
    email: 'hi@site.com',
};

const proxied = new Proxy(original, {
    get: function (target, prop, receiver) {
        if (prop === 'name') return 'ALICE';
        return 'YOU HAVE BEEN PWND!';
    },
});

// Теперь при обращении к проксированному объекту будет запускаться функция-геттер, которая проверит, к какому свойству мы обратились, и решит что именно вернуть:

console.log(proxied.name); // ALICE
console.log(proxied.email); // YOU HAVE BEEN PWND!

// Оригинальный объект остаётся при этом нетронутым:

console.log(original.name); // Alice
console.log(original.email); // hi@site.com

// Когда использовать Секция статьи "Когда использовать"
// Используйте прокси, когда вам необходимо заменить полностью или поменять API другого модуля, не трогая оригинальный объект.

// Такое бывает полезно при обработке пользовательских событий в сложных сценариях или при работе с DOM, когда перед вставкой нового DOM-узла нужно проверить какие-то условия.
